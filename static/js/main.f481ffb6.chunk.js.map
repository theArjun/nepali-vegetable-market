{"version":3,"sources":["components/Footer.js","components/Header.js","components/TableList.js","components/PriceCard.js","components/ThreeCardPricePane.js","components/LineChart.js","components/ThreeCardGraphPane.js","App.js","serviceWorker.js","index.js"],"names":["Footer","className","style","marginLeft","href","Header","role","id","src","width","alt","TableList","props","padding","paddingBottom","borderRadius","fontFamily","options","pageSize","actions","icon","tooltip","onClick","event","rowData","selected_veg","name","title","columns","field","data","today_data","PriceCard","card_bg","value","hasOwnProperty","min","avg","max","ThreeCardPane","veg","selection","max_price","min_price","avg_price","LineChart","chart_data","min_value","Math","min_price_list","map","Number","lineChartOptions","display","text","scales","yAxes","ticks","suggestedMax","max_price_list","suggestedMin","responsive","maintainAspectRatio","lineChartData","labels","date_list","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","avg_price_list","ThreeCardGraphPane","lastTenDaysData","days_before_list","Object","entries","date","pricing","push","days_before","min_price_list_temp","Array","length","max_price_list_temp","avg_price_list_temp","date_list_temp","index","required_position","unit","reverse","App","getTodayData","state","veg_name","setSelectedVeg","dataFromChild","selected_veg_info","filter","vegetable","setState","axios","get","then","res","fetched_data","keys","this","constructor","ThreeCardPricePane","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f481ffb6.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Footer.css\";\n\nconst Footer = () => {\n  return (\n    <div>\n      <footer>\n        <div className=\"jumbotron jumbotron-fluid bg-success mt-5 mb-0\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-12 col-sm-12 col-md-12 col-lg-4 col-xl-4\">\n                <div className=\"card bg-success border-0\">\n                  <div className=\"card-body text-light text-center\">\n                    <p className=\"text-white\">Fruits & Vegetables Nepal</p>\n                    <p className=\" \">\n                      theArjun Â© 2020\n                      <br />\n                    </p>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"col-12 col-sm-12 col-md-6 col-lg-4 col-xl-4\">\n                <div className=\"card bg-success border-0\">\n                  <div className=\"card-body text-center\">\n                    <div\n                      className=\"text-light d-block \"\n                      style={{ marginLeft: \"-20px\" }}\n                      href=\"\"\n                    >\n                      <i className=\"fa fa-phone mr-2\"></i>+98XXXXXXXXXX\n                    </div>\n                    <a\n                      className=\"text-light d-block \"\n                      href=\"mailto:arjun@biodiversitynepal.org\"\n                    >\n                      <i className=\"fa fa-envelope mr-2\"></i>\n                      arjun@biodiversitynepal.org\n                    </a>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"col-12 col-sm-12 col-md-6 col-lg-4 col-xl-4\">\n                <div className=\"card bg-success border-0\">\n                  <div className=\"card-body text-center\">\n                    <a\n                      className=\"text-light\"\n                      href=\"https://github.com/thearjun\"\n                    >\n                      <i className=\"fa fa-github fa-fw fa-2x\"></i>\n                    </a>\n\n                    <a className=\"text-light\" href=\"https://thearjun.tech\">\n                      <i className=\"fa fa-globe fa-fw fa-2x\"></i>\n                    </a>\n\n                    <a\n                      className=\"text-light\"\n                      href=\"https://linkedin.com/in/thearjun\"\n                    >\n                      <i className=\"fa fa-linkedin fa-fw fa-2x\"></i>\n                    </a>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport \"./Header.css\";\n\nconst Header = () => {\n  return (\n    <div>\n      <header role=\"banner\">\n        <img\n          id=\"logo-main\"\n          src=\"https://image.flaticon.com/icons/svg/3057/3057195.svg\"\n          width=\"100\"\n          alt=\"Vegetables\"\n        />\n        <div className=\"brand-name\">FRUITS & VEGETABLES - NEPAL</div>\n      </header>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport MaterialTable from \"material-table\";\n\nconst TableList = (props) => {\n  return (\n    <div>\n      <MaterialTable\n        style={{\n          padding: \"30px\",\n          paddingBottom: 0,\n          borderRadius: \"30px\",\n          fontFamily: \"Balsamiq Sans\",\n        }}\n        options={{\n          pageSize: 20,\n        }}\n        actions={[\n          {\n            icon: \"trending_up\",\n            tooltip: \"Visualize Price Graph\",\n            onClick: (event, rowData) => {\n              props.selected_veg(rowData.name);\n            },\n          },\n        ]}\n        title=\"Today's Fruit and Vegetable Price\"\n        columns={[\n          { title: \"Name\", field: \"name\" },\n          { title: \"Min Price (NRs.)\", field: \"min_price\" },\n          { title: \"Average Price (NRs.)\", field: \"avg_price\" },\n          { title: \"Max Price (NRs.)\", field: \"max_price\" },\n        ]}\n        data={props.today_data}\n      />\n    </div>\n  );\n};\n\nexport default TableList;\n","import React from \"react\";\nimport \"./PriceCard.css\";\n\nconst PriceCard = (props) => {\n  const data = { ...props };\n  let card_bg = \"\";\n  let value = 0;\n  let title = \"\";\n  if (data.hasOwnProperty(\"min\")) {\n    card_bg = \"bg-secondary\";\n    value = data.min;\n    title = \"Min Price\";\n  } else if (data.hasOwnProperty(\"avg\")) {\n    card_bg = \"bg-success\";\n    value = data.avg;\n    title = \"Average Price\";\n  } else if (data.hasOwnProperty(\"max\")) {\n    card_bg = \"bg-danger\";\n    value = data.max;\n    title = \"Max Price\";\n  }\n  return (\n    <div className=\"text-center\">\n      <div className={`pricecard card text-white text-center p-3 ${card_bg}`}>\n        <p className=\"lead\">{title}</p>\n        <p className=\"h1\">\n          {value}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default PriceCard;\n","import React from \"react\";\nimport PriceCard from \"./PriceCard\";\n\nconst ThreeCardPane = (props) => {\n  const veg = { ...props }.selection;\n  const max_price = veg.max_price;\n  const min_price = veg.min_price;\n  const avg_price = veg.avg_price;\n  const name = veg.name;\n  return (\n    <div>\n      <p className=\"text-center h3\">\n        {name}\n        &nbsp;\n      </p>\n      <p className=\"h6 text-center\">(Today's Price in NRs.)</p>\n      <br />\n      <div className=\"row\">\n        <div className=\"col-sm\">\n          <PriceCard min={min_price} />\n        </div>\n        <div className=\"col-sm\">\n          <PriceCard avg={avg_price} />\n        </div>\n        <div className=\"col-sm\">\n          <PriceCard max={max_price} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ThreeCardPane;\n","import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nconst LineChart = (props) => {\n  const chart_data = { ...props };\n  const pad = 5;\n  const min_value = Math.min(...chart_data.min_price_list.map(Number)) - pad;\n  const max_value = Math.max(...chart_data.max_price_list.map(Number)) + pad;\n\n  const lineChartOptions = {\n    title: {\n      display: false,\n      text: \"Price \",\n    },\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            suggestedMax: max_value,\n            suggestedMin: min_value,\n          },\n        },\n      ],\n    },\n    responsive: true,\n    maintainAspectRatio: true,\n  };\n\n  const lineChartData = {\n    labels: chart_data.date_list,\n    datasets: [\n      {\n        label: \"Min Price\",\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: \"rgba(75,192,192,0.4)\",\n        borderColor: \"#6c757d\",\n        borderCapStyle: \"butt\",\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: \"miter\",\n        pointBorderColor: \"rgba(75,192,192,1)\",\n        pointBackgroundColor: \"#fff\",\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n        pointHoverBorderColor: \"rgba(220,220,220,1)\",\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: chart_data.min_price_list,\n      },\n      {\n        label: \"Average Price\",\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: \"rgba(75,1,192,0.4)\",\n        borderColor: \"#54a972\",\n        borderCapStyle: \"butt\",\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: \"miter\",\n        pointBorderColor: \"rgba(75,192,192,1)\",\n        pointBackgroundColor: \"#fff\",\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n        pointHoverBorderColor: \"rgba(220,220,220,1)\",\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: chart_data.avg_price_list,\n      },\n      {\n        label: \"Max Price\",\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: \"rgba(75,0,50,0.4)\",\n        borderColor: \"#dd4d44\",\n        borderCapStyle: \"butt\",\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: \"miter\",\n        pointBorderColor: \"rgba(75,192,192,1)\",\n        pointBackgroundColor: \"#fff\",\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n        pointHoverBorderColor: \"rgba(220,220,220,1)\",\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: chart_data.max_price_list,\n      },\n    ],\n  };\n  return (\n    <div>\n      <Line data={lineChartData} options={lineChartOptions} />\n    </div>\n  );\n};\n\nexport default LineChart;\n","import React from \"react\";\nimport LineChart from \"./LineChart\";\n\nimport \"./ThreeCardGraphPane.css\";\n\nconst ThreeCardGraphPane = (props) => {\n  const lastTenDaysData = { ...props }.data;\n  const date_list = [];\n  const min_price_list = [];\n  const avg_price_list = [];\n  const max_price_list = [];\n  const days_before_list = [];\n\n  for (const [date, pricing] of Object.entries(lastTenDaysData)) {\n    if (date === \"unit\") {\n      continue;\n    }\n    date_list.push(date);\n    min_price_list.push(pricing.min_price);\n    avg_price_list.push(pricing.avg_price);\n    max_price_list.push(pricing.max_price);\n    days_before_list.push(pricing.days_before);\n  }\n\n  const min_price_list_temp = new Array(min_price_list.length).fill(0);\n  const max_price_list_temp = new Array(max_price_list.length).fill(0);\n  const avg_price_list_temp = new Array(avg_price_list.length).fill(0);\n  const date_list_temp = new Array(date_list.length).fill(\"\");\n\n  for (let index = 0; index < min_price_list.length; index++) {\n    const required_position = days_before_list[index];\n    min_price_list_temp[required_position] = min_price_list[index];\n    max_price_list_temp[required_position] = max_price_list[index];\n    avg_price_list_temp[required_position] = avg_price_list[index];\n    date_list_temp[required_position] = date_list[index];\n  }\n\n  return (\n    <div>\n      <br />\n      <p className=\"text-center h3\">\n        Pricing Graph per {lastTenDaysData.unit}&nbsp;\n        <span className=\"h6\">(From last 10 days)</span>\n      </p>\n      <LineChart\n        date_list={date_list_temp.reverse()}\n        min_price_list={min_price_list_temp.reverse()}\n        avg_price_list={avg_price_list_temp.reverse()}\n        max_price_list={max_price_list_temp.reverse()}\n      />\n    </div>\n  );\n};\n\nexport default ThreeCardGraphPane;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\nimport TableList from \"./components/TableList\";\nimport ThreeCardPricePane from \"./components/ThreeCardPricePane\";\nimport ThreeCardGraphPane from \"./components/ThreeCardGraphPane\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      today_data: [],\n      selected_veg: {},\n      lastTenDaysData: {},\n    };\n  }\n\n  getTodayData = () => {\n    const data = this.state.data;\n    const today_data = [];\n    for (const [veg_name, pricing] of Object.entries(data)) {\n      for (const [key, value] of Object.entries(pricing)) {\n        if (value.hasOwnProperty(\"today\")) {\n          let veg = {};\n          veg.name = veg_name;\n          veg.max_price = value.max_price;\n          veg.avg_price = value.avg_price;\n          veg.min_price = value.min_price;\n          today_data.push(veg);\n        }\n      }\n    }\n    return today_data;\n  };\n\n  setSelectedVeg = (dataFromChild) => {\n    const selected_veg_info = this.state.today_data.filter((vegetable) => {\n      return vegetable.name === dataFromChild;\n    });\n    this.setState({\n      selected_veg: selected_veg_info[0],\n    });\n    if (this.state.data.hasOwnProperty(dataFromChild)) {\n      this.setState({ lastTenDaysData: this.state.data[dataFromChild] });\n    }\n  };\n\n  componentDidMount() {\n    axios.get(`https://nepali-vegetable-market.herokuapp.com/`).then((res) => {\n      const fetched_data = res.data;\n      this.setState({ data: fetched_data });\n      this.setState({ today_data: this.getTodayData() });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <hr />\n        <div className=\"m-5\">\n          <div className=\"container\">\n            {Object.keys(this.state.selected_veg).length === 0 &&\n            this.state.selected_veg.constructor === Object ? null : (\n              <div>\n                <ThreeCardPricePane selection={this.state.selected_veg} />\n                <br />\n                <br />\n                <ThreeCardGraphPane data={this.state.lastTenDaysData} />\n              </div>\n            )}\n            <br />\n            <br />\n            <TableList\n              today_data={this.state.today_data}\n              selected_veg={this.setSelectedVeg}\n            />\n          </div>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}